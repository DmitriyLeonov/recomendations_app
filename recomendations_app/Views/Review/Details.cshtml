@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using System.Security.Claims
@model Recomendations_app.Models.ReviewModel
@inject SignInManager<UserModel> SignInManager

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>

<div>
    <div class="card mb-lg-auto">
        <div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="true">
            <div class="carousel-indicators">
                <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="0" class="active" aria-current="true" aria-label="Slide 1"></button>
                <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="1" aria-label="Slide 2"></button>
                <button type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide-to="2" aria-label="Slide 3"></button>
            </div>
            <div class="carousel-inner">
                @foreach (var image in @Model.Images)
                {
                    if (image == @Model.Images[0])
                    {
                        <div class="carousel-item active">
                            <img src="@Url.Content(image.ImageLink)" class="d-block w-100" alt="...">
                        </div>
                    }
                    else
                    {
                        <div class="carousel-item">
                            <img src="@Url.Content(image.ImageLink)" class="d-block w-100" alt="...">
                        </div>
                    }
                }
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="prev">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Previous</span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators" data-bs-slide="next">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                <span class="visually-hidden">Next</span>
            </button>
        </div>
        <div class="card-body">
            <h5 class="card-title">@Model.Title</h5>
            <p class="card-text">@Html.Raw(@Model.ReviewBody)</p>
            <p class="card-text"><small class="text-muted">Rating: @if (@Model.Comments.Count != 0)
                                                                   {
                                                                       @Model.Comments.Average(x => x.UserRating)
                                                                   }
                                                                   else
                                                                   {
                                                                       <b>0</b>
                                                                   }</small></p>
            <p class="card-text">
                <small class="text-muted">
                    @Model.ReviewCategory
                </small>
            </p>
            <p class="card-text">
                <small class="text-muted">
                    Author grade: @Model.AuthorGrade
                </small>
            </p>
            <p class="card-text">
                <small class="text-muted">
                    @Model.DateOfCreationInUTC
                </small>
            </p>
        </div>
    </div>
    <hr/>
</div>
<form asp-action="AddLike">
    @if (SignInManager.IsSignedIn(User) && @Model.Likes.Find(model => model.FromUserId == @User.FindFirst(ClaimTypes.NameIdentifier).Value) != null)
    {
        <input name="id" type="hidden" value="@Model.Id" />
        <div class="ui labeled button mt-5 ml-5" tabindex="0" id="like">
            <button type="submit" class="btn btn-outline-secondary btn-floating" disabled>
                <i class="fa-solid fa-thumbs-up"></i>
            </button>
            <span class="ui basic blue label">@Model.Likes.Count</span>
        </div>
    }
    else
    {
        <input name="id" type="hidden" value="@Model.Id" />
        <div class="ui labeled button mt-5 ml-5" tabindex="0" id="like">
            <button type="submit" class="btn btn-outline-secondary btn-floating">
                <i class="fa-regular fa-thumbs-up"></i>
            </button>
            <span class="ui basic blue label">@Model.Likes.Count</span>
        </div>
    }
</form>
<form asp-action="AddComment">
    <div class="container mt-5 mb-5">
        <div class="row height d-flex justify-content-center align-items-center">
            <div class="col-md-7">
                <div class="card">
                    <div class="p-3">
                        <h6>Comments</h6>
                    </div>
                    <div class="mt-2" id="comments">
                        @foreach (var comment in Model.Comments)
                        {
                            <div class="d-flex flex-row p-3">
                                <div class="d-flex flex-row p-3">
                                    <div class="w-100">
                                        <div class="d-flex justify-content-between align-items-center">
                                            <div class="d-flex flex-row align-items-center">
                                                <span class="mr-2">@comment.AuthorName</span>
                                            </div>
                                            <small>@comment.DateOfCreationInUTC</small>
                                        </div>
                                        <p class="text-justify comment-text mb-0">@comment.CommentBody</p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        
        <textarea name="commentText" class="form-control" required maxlength="255"></textarea>
        <br/>
        <span asp-validation-for="Title" class="text-danger"></span>
        <input name="id" type="hidden" value="@Model.Id"/>
        @if (SignInManager.IsSignedIn(User) && @Model.Comments.FirstOrDefault(x => x.AuthorName == @User.Identity?.Name) == null)
        {
            <label>Rating</label>

            <input name="rating" type="range" class="form-range" min="1" max="5" step="1" value="1" oninput="this.nextElementSibling.value = this.value">
            <output>1</output>
            <br />
            <div class="form-group">
                <input type="submit" value="Post comment" class="btn btn-outline-primary" />
            </div>
        }
        else
        {
            <div class="form-group">
                <input type="submit" value="Post comment" class="btn btn-outline-primary" disabled/>
            </div>
        }
        
    </div>
</form>
