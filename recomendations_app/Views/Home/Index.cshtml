@inject SignInManager<UserModel> SignInManager
@{
    ViewData["Title"] = "Home Page";
}

@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model IEnumerable<Recomendations_app.Models.ReviewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

    <div class="row">
        <div class="col-md-4">
            @await Component.InvokeAsync("TagsCloudComponent")
        </div>
        <div class="col-md-8">
            @Html.ActionLink("User rate", "Index", new { sortOrder = ViewBag.RateSortParm })
            @Html.ActionLink("Creation Date", "Index", new { sortOrder = ViewBag.DateSortParm })
            <div id="block">
                @foreach (var item in Model)
                {
                    <div class="card border-success mb-3" style="max-width: 540px;">
                        <div class="row g-0">
                            <div class="col-md-4 ramka">
                                <img src="@Url.Content(item.Images[0].ImageLink)" class="card-img-top" alt="...">
                            </div>
                            <div class="col-md-8">
                                <div class="card-body">
                                    <h5 class="card-title">
                                    <a asp-controller="Review" asp-action="Details" asp-route-id="@item.Id">@item.Title</a> Avg.rating:
                                        @if (@item.Comments.Count != 0)
                                        {
                                            @item.Comments.Average(x => x.UserRating)
                                        }
                                        else
                                        {
                                            <b>0</b>
                                        }
                                    </h5>
                                    <p class="card-text">@Html.Raw(@item.ReviewBody)</p>
                                    <p class="card-text">
                                        <small class="text-muted">Created @item.DateOfCreationInUTC</small>
                                    </p>
                                    <p class="card-text">
                                        <small class="text-muted">Author @item.Author.UserName likes: @item.Author.LikesCount</small>
                                    </p>
                                    <p class="card-text">
                                        <small class="text-muted">Author rate @item.AuthorGrade</small>
                                    </p>
                                    <p class="card-text">
                                        @foreach (var tag in item.Tags)
                                        {
                                            <small class="text-muted">@tag.Name</small>
                                        }
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
